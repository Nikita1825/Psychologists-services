{"version":3,"file":"static/js/885.6b558468.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Psychologist/PsychologistList.module.css?a799","components/Psychologist/PsychologistList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","utils/getAlphabet.js","pages/Psychologists.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"psychologist\":\"PsychologistList_psychologist__r7J4K\",\"psychologistLi\":\"PsychologistList_psychologistLi__ubNrd\",\"psychologist_avatar\":\"PsychologistList_psychologist_avatar__+tYoV\",\"card_expirience\":\"PsychologistList_card_expirience__q1v-z\",\"card_rating\":\"PsychologistList_card_rating__KMjXP\",\"card_h\":\"PsychologistList_card_h__0+S6G\",\"card_p\":\"PsychologistList_card_p__OR7YN\",\"card_name\":\"PsychologistList_card_name__oWQJF\",\"card_span\":\"PsychologistList_card_span__WacDT\",\"psychologist_list\":\"PsychologistList_psychologist_list__rVVqk\",\"loadMore\":\"PsychologistList_loadMore__A0GZU\",\"card_price\":\"PsychologistList_card_price__Y-caf\",\"card_rating_price\":\"PsychologistList_card_rating_price__hJiEO\",\"bpyug\":\"PsychologistList_bpyug__+8dcE\",\"card_reviews\":\"PsychologistList_card_reviews__mrWSX\",\"review_name\":\"PsychologistList_review_name__kLlOp\",\"review_rating\":\"PsychologistList_review_rating__bYxhd\",\"review_comment\":\"PsychologistList_review_comment__c1AOn\",\"review_list\":\"PsychologistList_review_list__cDl6j\",\"review_appointment\":\"PsychologistList_review_appointment__mDb0N\",\"card_readMore\":\"PsychologistList_card_readMore__5qDWJ\",\"card_svgActive\":\"PsychologistList_card_svgActive__pT4Mv\"};","import React from 'react';\nimport css from './PsychologistList.module.css';\nimport { useState } from 'react';\n\n\n\nexport const PsychologistList = ({ psychologists }) => {\n  const [elloadMore, setLoadMore] = useState(3);\n\n  const loadMore = () => {\n    setLoadMore(elloadMore + 3);\n  };\n  const slice = psychologists.slice(0, elloadMore);\n\n  const [teacherCardActive, setTeacherCardActive] = useState('');\n\n  const handleClick = psychologist => {\n    setTeacherCardActive(psychologist);\n  };\n\n  return (\n    <div className={css.psychologist}>\n      <ul className={css.psychologist_list}>\n        {slice.map(psychologist => (\n          <li key={psychologist.name} className={css.psychologistLi}>\n            <img\n              className={css.psychologist_avatar}\n              src={psychologist.avatar_url}\n              alt=\"\"\n            />\n            <svg className={css.card_svgActive} width=\"30\" height=\"20\" viewBox=\"0 0 14 14\" fill=\"#38CD3E\" xmlns=\"http://www.w3.org/2000/svg\">\n<circle cx=\"7\" cy=\"7\" r=\"7\" fill=\"#FBFBFB\"/>\n<circle cx=\"7.00065\" cy=\"7.00009\" r=\"4.66667\" fillRule=\"#38CD3E\"/>\n</svg>\n\n            <div>\n              <div className={css.card_rating}>\n                <p className={css.card_rating_price}><svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g clipPath=\"url(#clip0_42_1944)\">\n<path d=\"M6.20021 4.69703L8 1.28579L9.79979 4.69703C9.95896 4.9987 10.2491 5.20947 10.5851 5.26762L14.3856 5.92519L11.6975 8.69103C11.4598 8.93563 11.3489 9.27666 11.3975 9.61427L11.9465 13.4319L8.48537 11.7301C8.17929 11.5795 7.82071 11.5796 7.51463 11.7301L4.05348 13.4319L4.6025 9.61427C4.65105 9.27666 4.54024 8.93563 4.30252 8.69103L1.6144 5.92519L5.41486 5.26762C5.75095 5.20947 6.04104 4.9987 6.20021 4.69703ZM14.5177 5.78928L14.5175 5.78947L14.5177 5.78928ZM3.8834 13.5155C3.88344 13.5155 3.88349 13.5155 3.88353 13.5155L3.8834 13.5155Z\" fill=\"#FFC531\" stroke=\"#FFC531\" strokeWidth=\"1.2\"/>\n</g>\n<defs>\n<clipPath id=\"clip0_42_1944\">\n<rect width=\"16\" height=\"16\" fill=\"white\"/>\n</clipPath>\n</defs>\n</svg>\n                  Rating:{psychologist.rating}\n                </p>\n                <p className={css.card_rating_price}>\n                  Price / 1 hour:\n                  <span className={css.card_price}>\n                    {psychologist.price_per_hour}$\n                  </span>\n                  <svg width=\"26\" height=\"22\" viewBox=\"0 0 26 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M22.5766 2.99416C22.0233 2.44058 21.3663 2.00144 20.6433 1.70184C19.9202 1.40223 19.1452 1.24802 18.3625 1.24802C17.5798 1.24802 16.8047 1.40223 16.0817 1.70184C15.3586 2.00144 14.7016 2.44058 14.1483 2.99416L13 4.14249L11.8516 2.99416C10.734 1.87649 9.21809 1.2486 7.63747 1.2486C6.05685 1.2486 4.54097 1.87649 3.4233 2.99416C2.30563 4.11183 1.67773 5.62771 1.67773 7.20833C1.67773 8.78895 2.30563 10.3048 3.4233 11.4225L4.57163 12.5708L13 20.9992L21.4283 12.5708L22.5766 11.4225C23.1302 10.8692 23.5693 10.2122 23.869 9.48913C24.1686 8.76605 24.3228 7.99102 24.3228 7.20833C24.3228 6.42563 24.1686 5.65061 23.869 4.92753C23.5693 4.20445 23.1302 3.54748 22.5766 2.99416Z\" stroke=\"#191A15\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n</svg>\n                </p>\n               \n              </div>\n              <h2 className={css.card_h}>Psychologist</h2>\n              <p className={css.card_name}>{psychologist.name}</p>\n              <div className={css.card_expirience}>\n                <p className={css.card_p}>\n                  Experience:{' '}\n                  <span className={css.card_span}>\n                    {psychologist.experience}\n                  </span>\n                </p>\n                <p className={css.card_p}>\n                  License:{' '}\n                  <span className={css.card_span}>{psychologist.license}</span>\n                </p>\n              </div>\n              <div className={css.card_expirience}>\n                <p className={css.card_p}>\n                  Specialization:{' '}\n                  <span className={css.card_span}>\n                    {psychologist.specialization}\n                  </span>\n                </p>\n                <p className={css.card_p}>\n                  Initial_consultation:{' '}\n                  <span className={css.card_span}>\n                    {psychologist.initial_consultation}\n                  </span>\n                </p>\n              </div>\n              <p className={css.card_h}>{psychologist.about}</p>\n              {teacherCardActive !==\n                `${psychologist.name} ${psychologist.surname}` && (\n              <button\n                className={css.card_readMore}\n                onClick={() =>\n                  handleClick(`${psychologist.name} ${psychologist.surname}`)\n                }\n              >\n                Read more\n              </button>)}\n              {teacherCardActive ===\n                `${psychologist.name} ${psychologist.surname}` && (\n                <ul className={css.review_list}>\n                  {psychologist.reviews.map(review => (\n                    <li className={css.card_reviews} key={review.reviewer}>\n                      <div className={css.bpyug}></div>\n                      <div>\n                        <p className={css.review_name}>{review.reviewer}</p>\n                        \n                        <p className={css.review_rating}><svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g clipPath=\"url(#clip0_42_1944)\">\n<path d=\"M6.20021 4.69703L8 1.28579L9.79979 4.69703C9.95896 4.9987 10.2491 5.20947 10.5851 5.26762L14.3856 5.92519L11.6975 8.69103C11.4598 8.93563 11.3489 9.27666 11.3975 9.61427L11.9465 13.4319L8.48537 11.7301C8.17929 11.5795 7.82071 11.5796 7.51463 11.7301L4.05348 13.4319L4.6025 9.61427C4.65105 9.27666 4.54024 8.93563 4.30252 8.69103L1.6144 5.92519L5.41486 5.26762C5.75095 5.20947 6.04104 4.9987 6.20021 4.69703ZM14.5177 5.78928L14.5175 5.78947L14.5177 5.78928ZM3.8834 13.5155C3.88344 13.5155 3.88349 13.5155 3.88353 13.5155L3.8834 13.5155Z\" fill=\"#FFC531\" stroke=\"#FFC531\" strokeWidth=\"1.2\"/>\n</g>\n<defs>\n<clipPath id=\"clip0_42_1944\">\n<rect width=\"16\" height=\"16\" fill=\"white\"/>\n</clipPath>\n</defs>\n</svg>   {review.rating}</p>\n                        <p className={css.review_comment}>{review.comment}</p>\n                      \n                      </div>\n                      </li>\n                  ))}\n                  <button className={css.review_appointment}>Make an appointment</button>\n                </ul>\n              )}\n              \n            </div>\n          </li>\n        ))}\n      </ul>\n      {slice.length < 32 && (\n        <button className={css.loadMore} onClick={() => loadMore()}>\n          Load More\n        </button>\n      )}\n    </div>\n  );\n};\nexport default PsychologistList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter_form\":\"Filter_filter_form__hoCaU\",\"filter_label\":\"Filter_filter_label__5ITod\",\"filter_input\":\"Filter_filter_input__eu2zm\",\"filter_svg\":\"Filter_filter_svg__xifuw\",\"filter_list\":\"Filter_filter_list__Cl8l3\",\"filter_reset\":\"Filter_filter_reset__KbsYD\"};","import React from 'react';\nimport { useContext,  useState, useEffect } from 'react';\nimport { FilterContex } from 'context';\nimport { getAlphabetList, getExperienceList } from 'utils/getAlphabet';\nimport { onValue } from 'firebase/database';\nimport { database } from \"../../firebase-config\";\nimport css from './Filter.module.css'\n\n\nexport const Filter = ({changeFilter}) => {\n    const filter = useContext(FilterContex);\n    const [psychologists, setPsychologists] = useState([]);\n\n    const [visibleAlphabet, setVisibleAlphabet] = useState(false);\n    const [filterAlphabet, setFilterAlphabet] = useState('');\n    const alphabetList = getAlphabetList(psychologists);\n\n    const [visibleExperience, setVisibleExperience] = useState(false);\n    const [filterExperience, setFilterExperience] = useState('');\n    const experienceList = getExperienceList(psychologists);\n\n    const handleClickDropdownAlphabet = (e) => {\n        e.preventDefault()\n        setVisibleAlphabet(prevState => !prevState);\n      };\n      const handleClickDropdownExperience = (e) => {\n        e.preventDefault()\n        \n        setVisibleExperience(prevState => !prevState);\n      };\n\n\n\n      const handleClickFilterExperience = event => {\n        event.preventDefault()\n        const newFilter = {\n          firstFilter: filter ? false : true,\n          filter: 'experience',\n          value: event.target.innerHTML,\n        };\n    \n        setFilterExperience(event.target.innerHTML);\n        \n    \n        changeFilter(newFilter);\n    \n        setVisibleExperience(false);\n      };\n\n\n      const handleClickFilterAlphabet = event => {\n        event.preventDefault()\n        const newFilter = {\n          firstFilter: filter ? false : true,\n          filter: 'price_per_hour',\n          value: event.target.innerHTML,\n        };\n    \n        setFilterAlphabet(event.target.innerHTML);\n       \n    \n        changeFilter(newFilter);\n    \n        setVisibleAlphabet(false);\n      };\n      const handleClickReset = (e) => {\n        // e.preventDefault()\n        setFilterAlphabet('');\n        setFilterExperience('');\n        \n        changeFilter(null);\n        \n      };\n\n\n      useEffect(()=>{\n        \n        \n        \n        onValue(database, (snapshot)=>{\n            const currentData = snapshot.val();\n            \n            setPsychologists(currentData)\n\n        })\n    } ,[ ])\n    \n    return(\n<div className={css.filter}>\n    <form  className={css.filter_form}>\n        <label className={css.filter_label}>Rating\n        <input className={css.filter_input} type=\"text\" placeholder={filterAlphabet}  />\n        {visibleAlphabet ? (\n            <svg onClick={handleClickDropdownAlphabet} className={css.filter_svg} width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M5 12.5L10 7.5L15 12.5\" stroke=\"#FBFBFB\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  </svg>\n        ) : (\n            <svg onClick={handleClickDropdownAlphabet} className={css.filter_svg} width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M5 7.5L10 12.5L15 7.5\" stroke=\"#FBFBFB\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>\n        )}\n        {visibleAlphabet && (\n            <ul className={css.filter_list}>\n{alphabetList.map((item, index) =>(\n    <li key={index} onClick={handleClickFilterAlphabet}>\n         {item}\n    </li>\n))}\n            </ul>\n        )}\n        </label>\n        <label className={css.filter_label}>Experience\n        <input className={css.filter_input} type=\"text\" placeholder={filterExperience}  />\n        {visibleExperience ? (\n            <svg onClick={handleClickDropdownExperience} className={css.filter_svg} width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M5 12.5L10 7.5L15 12.5\" stroke=\"#FBFBFB\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  </svg>\n        ) : (\n            <svg onClick={handleClickDropdownExperience} className={css.filter_svg} width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M5 7.5L10 12.5L15 7.5\" stroke=\"#FBFBFB\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>\n        )}\n        {visibleExperience && (\n            <ul className={css.filter_list}>\n{experienceList.map((item, index) =>(\n    <li key={index} onClick={handleClickFilterExperience}>\n         {item}\n    </li>\n))}\n            </ul>\n        )}\n        </label>\n        \n\n <button className={css.filter_reset} onClick={handleClickReset}>Reset</button>\n    </form>\n</div>\n    )}\n    export default Filter","export const getAlphabetList = psychologists => {\n    return psychologists\n      .flatMap(psychologist => psychologist.price_per_hour)\n      .filter((item, index, array) => array.indexOf(item) === index);\n  };\n  export const getExperienceList = psychologists => {\n    return psychologists\n      .flatMap(psychologist => psychologist.experience)\n      .filter((item, index, array) => array.indexOf(item) === index);\n  };","import React from \"react\";\nimport { onValue } from 'firebase/database';\nimport { useState ,useEffect, useContext } from \"react\";\nimport { database } from \"../firebase-config\";\nimport PsychologistList from \"components/Psychologist/PsychologistList\";\nimport Filter from \"components/Filter/Filter\";\nimport { FilterContex } from '../context';\n\n\nconst Psychologists = ({changeFilter}) => {\n  const filter = useContext(FilterContex);\n\n    const [ psychologists, setPsychologists] = useState([ ])\n    \n    useEffect(() => {\n      if (!filter) return;\n  \n      if (filter.firstFilter) {\n        onValue(database, snapshot => {\n          let list;\n          if (filter.filter === 'price_per_hour') {\n            list = snapshot\n              .val()\n              .filter(item => item[filter.filter] <= filter.value);\n          } else {\n            list = snapshot\n              .val()\n              .filter(item => item[filter.filter].includes(filter.value));\n          }\n          setPsychologists(list);\n          console.log(list)\n        });\n      } \n    }, \n    [filter]);\n    \n    \n    useEffect(()=>{\n         onValue(database, (snapshot)=>{\n            const currentData = snapshot.val();\n            \n            setPsychologists(currentData)\n\n        })\n    } ,[ ])\n\n    return (\n    <div >\n     <Filter changeFilter={changeFilter}/>\n      <PsychologistList psychologists={psychologists} />\n    </div>\n  );\n}\n\nexport default Psychologists"],"names":["_ref","psychologists","_useState","useState","_useState2","_slicedToArray","elloadMore","setLoadMore","slice","_useState3","_useState4","teacherCardActive","setTeacherCardActive","_jsxs","className","css","children","_jsx","map","psychologist","src","avatar_url","alt","width","height","viewBox","fill","xmlns","cx","cy","r","fillRule","clipPath","d","stroke","strokeWidth","id","rating","price_per_hour","strokeLinecap","strokeLinejoin","name","experience","license","specialization","initial_consultation","about","concat","surname","onClick","handleClick","reviews","review","reviewer","comment","length","changeFilter","filter","useContext","FilterContex","setPsychologists","visibleAlphabet","setVisibleAlphabet","_useState5","_useState6","filterAlphabet","setFilterAlphabet","alphabetList","flatMap","item","index","array","indexOf","getAlphabetList","_useState7","_useState8","visibleExperience","setVisibleExperience","_useState9","_useState10","filterExperience","setFilterExperience","experienceList","getExperienceList","handleClickDropdownAlphabet","e","preventDefault","prevState","handleClickDropdownExperience","handleClickFilterExperience","event","newFilter","firstFilter","value","target","innerHTML","handleClickFilterAlphabet","useEffect","onValue","database","snapshot","currentData","val","type","placeholder","list","includes","console","log","Filter","PsychologistList"],"sourceRoot":""}